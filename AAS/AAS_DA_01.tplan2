/*
Copyright (c) ETSI 2020.

This software is subject to copyrights owned by ETSI. Non-exclusive permission
is hereby granted, free of charge, to copy, reproduce and amend this file
under the following conditions: It is provided "as is", without warranty of any
kind, expressed or implied.

ETSI shall never be liable for any claim, damages, or other liability arising
from its use or inability of use.This permission does not apply to any documentation
associated with this file for which ETSI keeps all rights reserved. The present
copyright notice shall be included in all copies of whole or part of this
file and shall not imply any sub-license right.
*/

//Basic data structures
Package AAS_DATA 
	Data 
		type float;
		type position with x of type float, y of type float;
		float -22; 
		float -21; 
		position startingPosition containing x indicating value -21;


Type AccessControl with

	aAccessorIdentity of type AccessorIdentity,  // Identity of the accessor accessing the resource
	aAccessorRights of type AccessorRights,  // Accessor rights (e.g. delete, update).
	aGrantorIdentity of type AccessorIdentity OPTIONAL  // Identity of the grantor
;
 

Type AccessorRights;

AccessorRights eRight-Bit1 indicating value 0;

AccessorRights	eRight-Bit2 indicating value 1 ;
AccessorRights	eRight-Bit3 indicating value 2 ;
AccessorRights	eRight-Bit4 indicating value 3 ;
AccessorRights	eRight-Bit5 indicating value 4 ;
AccessorRights	eRight-Bit6 indicating value 5 ;
AccessorRights	eRight-Bit7 indicating value 6 ;
AccessorRights	eRight-Bit8 indicating value 7 ;
AccessorRights	eRight-Bit9 indicating value 8 ;
AccessorRights	eRight-Bit10 indicating value 9 ;
AccessorRights	eRight-Bit11 indicating value 10 ;
AccessorRights	eRight-Bit12 indicating value 11 ;
AccessorRights	eRight-Bit13 indicating value 12 ;
AccessorRights	eRight-Bit14 indicating value 13 ;
AccessorRights	eRight-Bit15 indicating value 14 ;
AccessorRights	eRight-Bit16 indicating value 15 ;
AccessorRights	eRight-Bit17 indicating value 16 ;
AccessorRights	eRight-Bit18 indicating value 17 ;
AccessorRights	eRight-Bit19 indicating value 18 ;
AccessorRights	eRight-Bit20 indicating value 19 ;
AccessorRights	eRight-Bit21 indicating value 20 ;
AccessorRights	eRight-Bit22 indicating value 21 ;
AccessorRights	eRight-Bit23 indicating value 22 ;
AccessorRights	eRight-Bit24 indicating value 23 ;
AccessorRights	eRight-Bit25 indicating value 24 ;
AccessorRights	eRight-Bit26 indicating value 25 ;
AccessorRights	eRight-Bit27 indicating value 26 ;
AccessorRights	eRight-Bit28 indicating value 27 ;
AccessorRights	eRight-Bit29 indicating value 28 ;
AccessorRights	eRight-Bit30 indicating value 29 ;
AccessorRights	eRight-Bit31 indicating value 30 ;
AccessorRights	eRight-Bit32 indicating value 31 ;


Collection AccessControlList of type AccessControl  // Access control list


Type Accessor with

	aAccessorGroup AccessorGroup,
	aAccessorUser AccessorUser
;
Collection MembersOfGroup type of AccessorIdentity;
Type AccessorGroup with

	aAccessorIdentity AccessorIdentity,  // Identity of the accessor
	aMembersOfGroup MembersOfGroup,  // Members of the group
	aACL AccessControlList  // Access control list
;

type AccessorUser with

	aAccessorIdentity AccessorIdentity,  // Identity of the accessor
	aAccessorConditions AccessorConditions OPTIONAL,  // Accessor conditions
	aACL AccessControlList  // Access control list
;


type AccessorIdentity type of UUID  // accessor identity


type AccessorConditions with

	aAccessConditionsBiometry AccessorConditionsBiometry OPTIONAL,
	aAccessConditionsPIN AccessorConditionsPIN OPTIONAL,
	aAccessConditionsTokens AccessorConditionsToken OPTIONAL,
	aAccessConditionHostDomain AccessConditionHostDomain OPTIONAL
;


type AccessorConditionsBiometry ::= [PRIVATE 9] BIT STRING

	eReservedForFuture (0)  // Reserved for future usage
; 


type AccessorConditionsPIN ::= [PRIVATE 10] BIT STRING

	ePinNumeric (0),  // The user shall present a numeric PIN
	ePinPassword (1),  // The user shall present a password
	ePinPattern (2)  // The user shall present a graphical pattern
; (SIZE(32))


type AccessorConditionsToken ::= [PRIVATE 11] BIT STRING

	eTokenCertificate (0)  // A token verification by using the certificate shall be performed
; (SIZE(32))


type AccessConditionHostDomain ::= [PRIVATE 12] BOOLEAN


eAASAccessRight-RequiresSecurePipe AccessorRights ::= eRight-Bit1 ;
eAASAccessRight-Create AccessorRights ::=  eRight-Bit2 ;
eAASAccessRight-Delete AccessorRights ::=  eRight-Bit3 ;
eAASAccessRight-Update AccessorRights ::=  eRight-Bit4 ;
eAASAccessRight-UpdateACL AccessorRights ::=  eRight-Bit5 ;
eAASAccessRight-UpdateGroup AccessorRights ::=  eRight-Bit6 ;
eAASAccessRight-UpdateCredentialPolicy AccessorRights ::=  eRight-Bit7 ;
eAASAccessRight-UpdateCredentialStatus AccessorRights ::=  eRight-Bit8 ;


/* Maximum size of each side of the entry panel for pattern */
type maxEntryPanelDimension INTEGER ::= 10

/* Coordinate of point in pattern from the top-left corner, starting with index 1 */
PatternPoint with

	x INTEGER (1.. maxEntryPanelDimension),  // X coordinate
	y INTEGER (1.. maxEntryPanelDimension)  // Y coordinate
;

type AccessorCredentials ::= [PRIVATE 13] SEQUENCE

	// Credentials of type PIN
	aPinNumericCredential [0] NumericString (SIZE(4..255)) OPTIONAL,  // Numeric PIN
	aPinPasswordCredential [1] PrintableString (SIZE(4..255)) OPTIONAL,  // Password
	aPinPatternCredential [2] SEQUENCE OF PatternPoint (SIZE(4..255)) OPTIONAL,  // Graphical pattern

	// Credentials for the token based verification
	aCertificates [10] Certificates (SIZE(1..MAX)),  // Set of X.509 certificates of the accessor

	// Credentials of type host domain
	aHostDomainCredential [20] SET OF UUID  // Set of SCL host domains

	// Credentials of type biometric: for future usage
;


type PinNumericPolicy with

	aIsDisableForbidden BOOLEAN DEFAULT FALSE,  // Disabling forbidden
	aMinSize INTEGER (4..255) DEFAULT 4,  // Minimum size of PIN
	aMaxSize INTEGER (4..255) DEFAULT 255,  // Maximum size of PIN
	aMaxAttempts INTEGER (0..255) DEFAULT 0  // Maximum number of attempts
;

type PinPasswordPolicy with

	aMinSize INTEGER (4..255) DEFAULT 4,  // Minimum length of password
	aMaxSize INTEGER (4..255) DEFAULT 255,  // Maximum length of password
	aRequiresLowerCaseLetter BOOLEAN DEFAULT FALSE,  // At least one lower case letter is required
	aRequiresUpperCaseLetter BOOLEAN DEFAULT FALSE,  // At least one upper case letter is required
	aRequiresNumber BOOLEAN DEFAULT FALSE,  // At least on numeric digit is required
	aRequiresSymbol BOOLEAN DEFAULT FALSE,  // At least one special character is required
	aMaxAttempts INTEGER (0..255) DEFAULT 0  // Maximum number of attempts
;

type PinPatternPolicy with

	aMinSize INTEGER (4..255) DEFAULT 4,  // Minimum number of points in pattern
	aMaxSize INTEGER (4..255) DEFAULT 255,  // Maximum number of points in pattern
	aEntryPanelMinSize INTEGER (3.. maxEntryPanelDimension) DEFAULT 3,
	aSamePointMultipleTimes BOOLEAN DEFAULT FALSE,  // If a point can occur multiple times
	aMaxAttempts INTEGER (0..255) DEFAULT 0  // Maximum number of attempts
;

type AccessorCredentialsPolicy with

	aPinNumericPolicy PinNumericPolicy OPTIONAL,  // Numeric PIN policy
	aPinPasswordPolicy PinPasswordPolicy OPTIONAL,  // Password policy
	aPinPatternPolicy PinPatternPolicy OPTIONAL  // Graphical pattern policy
;


type AccessorCommonCredentialStatus with

	aIsDisabled BOOLEAN DEFAULT TRUE,  // indicates if credential is disabled
	aRemainingAttempts INTEGER (0..255) OPTIONAL  // remaining number of attempts
;

type PinNumericCredentialStatus with

	aCommonStatus AccessorCommonCredentialStatus
;

type PinPasswordCredentialStatus with

	aCommonStatus AccessorCommonCredentialStatus
;

PinPatternCredentialStatus with

	aCommonStatus AccessorCommonCredentialStatus
;

AccessorCredentialsStatus with

	aPinNumericStatus PinNumericCredentialStatus OPTIONAL,
	aPinPasswordStatus PinPasswordCredentialStatus OPTIONAL,
	aPinPatternStatus PinPatternCredentialStatus OPTIONAL
;


type AAS-GET-CAPABILITIES;

	AAS-GET-CAPABILITIES eGlobalAuthenticationService (0),  // retrieve user accessors available in the SSP host
	AAS-GET-CAPABILITIES eAccessorStatus (1)  // retrieve status related to the accessor authentication service gate
;

AAS-OP-GET-CAPABILITIES-Service-Command ::= [PRIVATE 16] SEQUENCE

aRequestType AAS-GET-CAPABILITIES-Type
;


AAS-OP-GET-CAPABILITIES-Service-Response-Parameter ::= CHOICE

	aGlobalAuthenticationService SEQUENCE  // for aRequestType set to eGlobalAuthenticationService
	
		aAASVersion VersionType,  // release of the AAS service
		aAccessorList SET OF Accessor,  // List of accessors
		aACL AccessControlList  // Access control list
	;,
	aAccessorStatus SEQUENCE  // for aRequestType set to eAccessorStatus
	
		aIsAuthenticated BOOLEAN,  // indicates if the accessor is authenticated
		aAccessorConditions AccessorConditions,  // accessor conditions
		aAccessorCredentialsStatus AccessorCredentialsStatus,  // status of credentials of the accessor
		aAccessorCredentialsPolicy AccessorCredentialsPolicy  // policies for the credentials of the accessor
	;
;

AAS-OP-GET-CAPABILITIES-Service-Response ::= [PRIVATE 16] SEQUENCE

	aAAS-Service-Response AAS-Service-Response DEFAULT eAAS-OK,
	aParameter AAS-OP-GET-CAPABILITIES-Service-Response-Parameter OPTIONAL
;


AAS-ADMIN-CREATE-ACCESSOR-Service-Command ::= [PRIVATE 17] SEQUENCE

	aAccessor Accessor,  // Accessor to be created
	aAccessorConditions AccessorConditions,  // Conditions
	aCredential AccessorCredentials,  // Credentials for the accessor
	aCredentialsPolicy AccessorCredentialsPolicy OPTIONAL,  // Policy for the provided accessors
	aCredentialsStatus AccessorCredentialsStatus OPTIONAL  // Status of credentials
;


AAS-ADMIN-CREATE-ACCESSOR-Service-Response ::= [PRIVATE 17] SEQUENCE

	aAAS-Service-Response AAS-Service-Response DEFAULT eAAS-OK
;


AAS-ADMIN-UPDATE-ACCESSOR-Service-Command ::= [PRIVATE 18] SEQUENCE

	aAccessorIdentity AccessorIdentity,  // Identity of the accessor
	aMembersOfGroup SET OF AccessorIdentity OPTIONAL,  // Members of the group
	aACL AccessControlList OPTIONAL,  // Access control list
	aSetAccessorConditions AccessorConditions OPTIONAL,  // Conditions to be set
	aRemoveAccessorConditions AccessorConditions OPTIONAL,  // Conditions to be removed
	aSetCredential AccessorCredentials OPTIONAL,  // Credentials to be set
	aRemoveCredential AccessorConditions OPTIONAL,  // List of credentials to be removed
	aCredentialsPolicy AccessorCredentialsPolicy OPTIONAL,  // Credential policy
	aCredentialsStatus AccessorCredentialsStatus OPTIONAL  // Status of credentials
;


AAS-ADMIN-UPDATE-ACCESSOR-Service-Response ::= [PRIVATE 18] SEQUENCE

	aAAS-Service-Response AAS-Service-Response DE FAULT eAAS-OK
;


AAS-ADMIN-DELETE-ACCESSOR-Service-Command ::= [PRIVATE 19] SEQUENCE

	aAccessorIdentity AccessorIdentity  // Identity of the accessor to delete
;


AAS-ADMIN-DELETE-ACCESSOR-Service-Response ::= [PRIVATE 19] SEQUENCE

	aAAS-Service-Response AAS-Service-Response DEFAULT eAAS-OK
;


AAS-OP-AUTHENTICATE-ACCESSOR-Service-Command ::= [PRIVATE 22] SEQUENCE

	aCredential CHOICE
	
		aPinNumericCredential [10] NumericString,  // Numeric PIN
		aPinPasswordCredential [11] PrintableString,  // Password
		aPinPatternCredential [12] PrintableString,  // Graphical pattern
		aAccessorTokenCertificationPath [20] Certificates,
		aHostDomainCredential [30] NULL
	;
;


AAS-OP-AUTHENTICATE-ACCESSOR-Service-Response-Parameter with

	aCredentialsStatus AccessorCredentialsStatus OPTIONAL,  // Status of credentials after the command
	aServiceTokenCertificationPath Certificates OPTIONAL  // Certification path of  the token generated by the accessor authentication service
;

AAS-OP-AUTHENTICATE-ACCESSOR-Service-Response ::= [PRIVATE 22] SEQUENCE

	aAAS-Service-Response AAS-Service-Response DEFAULT eAAS-OK,
	aParameter AAS-OP-AUTHENTICATE-ACCESSOR-Service-Response-Parameter OPTIONAL
;


AAS-OP-ACCESS-SERVICE-Service-Command ::= [PRIVATE 20] SEQUENCE

	aServiceIdentifier UUID,  // Identifier of the service gate
	aUseSecurePipe BOOLEAN DEFAULT FALSE  // Indication of secure pipe is requested
;


AAS-OP-ACCESS-SERVICE-Service-Response-Parameter with

	aGateIdentifier UUID  // Identifier of the service gate
;

AAS-OP-ACCESS-SERVICE-Service-Response ::= [PRIVATE 20] SEQUENCE

	aAAS-Service-Response AAS-Service-Response DEFAULT eAAS-OK,
	aParameter AAS-OP-ACCESS-SERVICE-Service-Response-Parameter OPTIONAL
;


AAS-OP-GET-CHALLENGE-Service-Command ::= [PRIVATE 21] SEQUENCE

;


AAS-OP-GET-CHALLENGE-Service-Response-Parameter with

	aChallenge OCTET STRING (SIZE (16)),
	aCertificates Certificates  // Certificates of the accessor authentication service
;

AAS-OP-GET-CHALLENGE-Service-Response ::= [PRIVATE 21] SEQUENCE

 	aAAS-Service-Response AAS-Service-Response DEFAULT eAAS-OK,
	aParameter AAS-OP-GET-CHALLENGE-Service-Response-Parameter OPTIONAL
;

AAS-Service-Response ::= ENUMERATED

	eAAS-OK (0),  // Operation successful
	eAAS-E-CMD-PAR-UNKNOWN (2),  // Unknown parameters used for an operation
	eAAS-E-NOK (3),  // Operation failed
	eAAS-ACL-RULES-VIOLATIONS (14),  // The operation violates the ACL conditions
	eAAS-NOT-AUTHENTICATED (15),  // The accessor is not authenticated
	eAAS-POLICY-RULES-VIOLATIONS (16)  // The operation violates the credentials policy
;
	; 	
;