/*
Copyright (c) ETSI 2020.

This software is subject to copyrights owned by ETSI. Non-exclusive permission
is hereby granted, free of charge, to copy, reproduce and amend this file
under the following conditions: It is provided "as is", without warranty of any
kind, expressed or implied.

ETSI shall never be liable for any claim, damages, or other liability arising
from its use or inability of use.This permission does not apply to any documentation
associated with this file for which ETSI keeps all rights reserved. The present
copyright notice shall be included in all copies of whole or part of this
file and shall not imply any sub-license right.
*/
Package AAS_setup_001 {

	Action preambles : "Preamble:The generic procedure open a pipe session on the AAS.";
	Action preConditions : "Pre_test Conditions:RC Connection Reconfiguration" ;
	
	
	Type Verdict ;
	Verdict PASS ;
	Verdict FAIL ;
	
	//User_defined annotation types
	Annotation TITLE ; //Test description title
	Annotation STEP ; //Step identifiers in source documents
	Annotation PROCEDURE ; //Informal textual description of a test step
	Annotation PRECONDITION ; //Identify pre_condition behaviour
	Annotation PREAMBLE ; //Identify preamble behaviour.
	
	//Test objectives (copied verbatim from source document)
	Test Objective AAS_TP1 {
		from : "RQ0613_001" ;
	 	description : "Prior to access to a resource, an accessor shall authenticate itself based on some credentials with the accessor authentication service." ;
	}
	Test Objective AAS_TP2 {
		from : "RQ0613_002" ;
	 	description : "Prior to access to a resource, an accessor shall authenticate itself based on some credentials with the accessor authentication service." ;
	}
	//Relevant data definitions
	//Type of accessor generating different errors according to the test objectives
	//-----------------------------------------------------------------------------
	Type Accessor;
	Accessor aAccessor_OK ; //Command successful
	Accessor aAccessor_E_CMD_PAR_UNKNOWN ; // Unknown parameters used for an operation
	Accessor aAccessor_E_NOK ; // Operation failed
	Accessor aAccessor_ACL_RULES_VIOLATIONS ; // The operation violates the ACL conditions
	Accessor aAccessor_NOT_AUTHENTICATED ; // The accessor is not authenticated
	Accessor aAccessor_POLICY_RULES_VIOLATIONS ; // The operation violates the credentials policy
	
	// Response status
	//---------------
	Type AAS_Service_Response;
	AAS_Service_Response eAAS_OK ; // Operation successful
	AAS_Service_Response eAAS_E_CMD_PAR_UNKNOWN ; // Unknown parameters used for an operation
	AAS_Service_Response eAAS_E_NOK ; // Operation failed
	AAS_Service_Response eAAS_ACL_RULES_VIOLATIONS ; // The operation violates the ACL conditions
	AAS_Service_Response eAAS_NOT_AUTHENTICATED ; // The accessor is not authenticated
	AAS_Service_Response eAAS_POLICY_RULES_VIOLATIONS ; // The operation violates the credentials policy
	//Type of Accessor create command
	//-------------------------------
	Type AAS_ADMIN_CREATE_ACCESSOR_Service_Command(accessor of type Accessor);
	AAS_ADMIN_CREATE_ACCESSOR_Service_Command aAAS_ADMIN_CREATE_ACCESSOR_Service_Command ;
	
	//Type of accessor create response
	//--------------------------------
	Type AAS_ADMIN_CREATE_ACCESSOR_Service_Response(status of type AAS_Service_Response) ;
	AAS_ADMIN_CREATE_ACCESSOR_Service_Response aAAS_ADMIN_CREATE_ACCESSOR_Service_Response ;

	//User_defined time units
 	Time Second;
 	Second five;
	
	 //Gate type definitions and type of accepted message per gate
	 //-----------------------------------------------------------
	Gate Type AAS_GT accepts AAS_ADMIN_CREATE_ACCESSOR_Service_Response, AAS_ADMIN_CREATE_ACCESSOR_Service_Command ;
	Gate Type AAA_GT accepts AAS_ADMIN_CREATE_ACCESSOR_Service_Response, AAS_ADMIN_CREATE_ACCESSOR_Service_Command ;
	
	//Component type definitions
	Component Type defAAS_CT having {
		gate gate_ of type AAS_GT;
	}
	Component Type defAAA_CT having {
		gate gate_ of type AAA_GT;
	}
	
	 //Test configuration definition
	Test Configuration defaultAASconfiguration {
		//Create the tester as an Accessor Authentication Application
		create Tester AAA of type defAAA_CT;
		//Create the SUT as as an Accessor Authentication Service 
		create SUT AAS of type defAAS_CT ;
	 	connect AAS.gate_ to AAA.gate_ ;
	}
 } 	with {
	Note : "AAS" ;
 	TITLE : "Correct Accessor Creation" ;
	}
 
